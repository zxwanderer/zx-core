# file opened: /Users/random/zx-core/src/main.asm
 1    0000              		DEVICE 	ZXSPECTRUM128
 2    0000
 3    0000              		ORG	#8000
 4    8000              start:
 5    8000 F3           		DI
 6    8001 3E FF        		LD	A,255
 7    8003              LOOP0
 8    8003 21 00 40     		LD	HL,#4000;задаём адрес начала экрана в регистр HL, будем туда писать всякие байты
 9    8006 06 D8        		LD	B,192+24;в регистр B кладем высоту экрана в байтах, плюс еще 24 байта, чтобы кроме точек красились еще и аттрибуты
10    8008              LOOP1
11    8008 0E 20        		LD	C,32	;в регистр C кладем ширину экрана в байтах
12    800A              LOOP2
13    800A 77           		LD	(HL),A	;кладем по адресу, заданному регистром HL значение регистра A
14    800B 23           		INC	HL	;увеличиваем на единицу адрес экрана
15    800C 3D           		DEC	A	;уменьшаем на единицу значение в регистре A, просто чтобы всё время что-то новое выводить
16    800D 0D           		DEC	C	;уменьшаем счетчик ширины на единицу
17    800E C2 0A 80     		JP	NZ,LOOP2;пока C не достигло нуля, прыгаем на LOOP2, иначе идем дальше
18    8011 05           		DEC	B	;
19    8012 C2 08 80     		JP	NZ,LOOP1;пока B не достигло нуля, прыгаем на LOOP1, иначе идем дальше
20    8015
21    8015 3D           		DEC	A	;на единичку уменьшим A, чтобы следующий кадр отрисовывать с чего-то другого
22    8016 C3 03 80     		JP	LOOP0	;зарисовали весь экран ерундой, начнем сначала, но уже с тем A, какой попадется
23    8019
24    8019              	display 'PAGE0 end: ', $
25    8019
26    8019              	display /d, 'Total bytes used: ', $ - start
27    8019
28    8019              	; build
29    8019              	if (0 == 0 && 0 == 0)
30    8019              	  savesna 'program.sna', start			; SNA_FILENAME defined in Makefile
31    8019              	endif
# file closed: /Users/random/zx-core/src/main.asm
